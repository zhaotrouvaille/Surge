name: Update Rules

on:
  workflow_dispatch:
  # schedule:
  #   - cron: "0 0 * * *"  # 每天运行一次

jobs:
  Update-Rules:
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Shanghai'
    
    steps: 
    - name: Checkout repository
      uses: actions/checkout@v4.1.0
      with:
        path: Surge-repo

    - name: Update Rules
      run: |
        cd Surge-repo/Rule
        curl -L -o Adblock.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Extra/Reject/Advertising.list"
        curl -L -o Apple.list "https://ruleset.skk.moe/List/non_ip/apple_cdn.conf"
        curl -L -o Apple_cn.list "https://ruleset.skk.moe/List/non_ip/apple_cn.conf"
        curl -L -o CDN.list "https://ruleset.skk.moe/List/domainset/cdn.conf"
        curl -L -o CDN_NoIP.list "https://ruleset.skk.moe/List/non_ip/cdn.conf"     
        curl -L -o Domestic.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Direct.list"
        curl -L -o Global.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Proxy.list"
        curl -L -o Malicious.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Extra/Reject/Malicious.list"
        curl -L -o OpenAI.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Extra/AI.list"
        curl -L -o Privacy.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Extra/Reject/Tracking.list"
        curl -L -o Stream.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Extra/Streaming/!CN.list"
        curl -L -o Telegram.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/refs/heads/master/Surge/Ruleset/Extra/Telegram.list"
        curl -L -o Unbreak.list "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Direct+.list"

    - name: Edit Rules
      run: |
        cd Surge-repo/Rule
        for file in *.list; do
          if [ "$file" != "Lan.list" ] ; then
            sed -i -e 's/, /,/g' \
                   -e 's/;/# /g' \
                   -e 's/host,/HOST,/g' \
                   -e 's/host-/HOST-/g' \
                   -e 's/-suffix/-SUFFIX/g' \
                   -e 's/-keyword/-KEYWORD/g' \
                   -e 's/ip-cidr/IP-CIDR/g' \
                   -e 's/-wildcard/-WILDCARD/g' \
                   -e 's/geoip/GEOIP/g' \
                   -e 's/HOST,/DOMAIN,/g' \
                   -e 's/HOST-/DOMAIN-/g' \
                   -e 's/IP6-CIDR,/IP-CIDR6,/g' \
                   -e 's/,REJECT$//g' \
                   -e 's/,DIRECT$//g' \
                   -e 's/,reject$//g' \
                   -e 's/,direct$//g' \
                   -e '/# 更新：/d' \
                   -e '/# AUTHOR:/d' \
                   -e '/# REPO:/d' \
                   -e '/# UPDATED:/d' \
                   -e '/# 数目: /d' \
                   -e '/# 规则: /d' \
                   -e '/404: Not Found/d' \
                   "$file"
            # 如果为IP规则且不包含no-resolve 则添加no-resolve
            awk '/^IP-/ && !/,no-resolve/ {print $0",no-resolve"; next} {print}' "$file" > tmpfile
            mv tmpfile "$file"
          else
            echo "$file not found."
          fi
        done

        # 转换 domain-set 为 rule-set
        for file in {CDN,cdn}.list; do
          if [ -f "$file" ]; then
            # 将以.开头的行的第一个.替换为 DOMAIN-SUFFIX,
            sed -i '/^\./s/^\./DOMAIN-SUFFIX,/' "$file"
            # 将除了以#开头、空行和以DOMAIN-SUFFIX开头之外的行，在行首添加 DOMAIN,
            sed -i '/^\s*$/b; /^\s*#/b; /^DOMAIN-SUFFIX,/b; s/^\([^#]\)/DOMAIN,\1/' "$file"
          else
            echo "$file not found."
          fi
        done

    - name: Append Rules
      run: |
        cd Surge-repo/Rule
        if [ -f "CDN.list" ] ; then
          cat CDN_NoIP.list >> CDN.list
          rm -rf CDN_NoIP.list
        else
          echo "CDN.list not found."
        fi
        
        if [ -f "Apple.list" ] ; then
          cat Apple_cn.list >> Apple.list
          rm Apple_cn.list
        else
          echo "Apple.list not found."
        fi
        
        if [ -f "Privacy.list" ] ; then
          cat Malicious.list >> Privacy.list
          rm Malicious.list
        else
          echo "Privacy.list not found."
        fi
        
        if [ -f "Adblock.list" ] ; then
          cat Privacy.list >> Adblock.list
          rm Privacy.list
        else
          echo "Adblock.list not found."
        fi

    - name: Remove duplicates and sort
      run: |
        cd Surge-repo/Rule
        shopt -s nullglob  # 避免没有匹配的文件时保留原始通配符
        for file in CDN.list; do
          if [ -f "$file" ]; then
            sorted_file="sorted_${file}"
            # 使用 grep 去掉包含 # 的行
            grep -v '^\s*#' "$file" | grep -v '^\s*$' | sort | uniq > "$sorted_file"
            mv "$sorted_file" "$file"
          else
            echo "$file not found."
          fi
        done
      shell: bash

    - name: Commit Changes
      run: |
        cd Surge-repo
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Auto Update Rules $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M')"
          git push
        else
          echo "No changes to commit."
        fi

    - name: Cleanup Workflow
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2
